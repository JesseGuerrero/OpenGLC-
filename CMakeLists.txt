cmake_minimum_required(VERSION 3.22)
project(CPPOpenGL)

set(CMAKE_CXX_STANDARD 23)
include("D:/Other/New folder/vcpkg/scripts/buildsystems/vcpkg.cmake")
include_directories("include")

find_package(OpenGL REQUIRED)
find_package(GLUT REQUIRED)
find_package(assimp CONFIG REQUIRED)
find_package(GLEW REQUIRED)

macro (add_executable_and_libs _name)
    # invoke built-in add_executable
    _add_executable(${ARGV})
    if (TARGET ${_name})
        target_link_libraries(${_name} PRIVATE GLUT::GLUT)
        target_link_libraries(${_name} PRIVATE ${OPENGL_gl_LIBRARY})
        target_link_libraries(${_name} PRIVATE assimp::assimp)
        target_link_libraries(${_name} PRIVATE GLEW::GLEW)
    endif()
endmacro()

file(GLOB GLSL_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*Dir/*.glsl")
file(COPY ${GLSL_FILES} DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
add_executable_and_libs(01Window 01Window.cpp)
add_executable_and_libs(02Dot 02Dot.cpp)
add_executable_and_libs(02Dots 02Dots.cpp)
add_executable_and_libs(02DotsRandom 02DotsRandom.cpp)
add_executable_and_libs(02Line 02Line.cpp)
add_executable_and_libs(02Lines 02Lines.cpp)
add_executable_and_libs(03Triangle 03Triangle.cpp)
add_executable_and_libs(03Triangles 03Triangles.cpp)
add_executable_and_libs(04Shaders 04Shaders.cpp)
add_executable_and_libs(test test.cpp)
